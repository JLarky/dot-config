{
	"folder_history":
	[
	],
	"last_window_id": 26,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ex",
						"export"
					],
					[
						"L",
						"Level"
					],
					[
						"Q",
						"Query"
					],
					[
						"P",
						"Params"
					],
					[
						"Pd",
						"Puid"
					],
					[
						"VP",
						"VoucheePuid"
					],
					[
						"V",
						"VoucherPuid"
					],
					[
						"badge",
						"badge_groups"
					],
					[
						"ba",
						"badge_groups"
					],
					[
						"Url",
						"Urls"
					],
					[
						"we",
						"websites"
					],
					[
						"en",
						"encode"
					],
					[
						"add_",
						"add_user_profiles"
					],
					[
						"Pro",
						"Profile"
					],
					[
						"Pr",
						"Profile"
					],
					[
						"add",
						"add_profiles"
					],
					[
						"for",
						"force"
					],
					[
						"fo",
						"force"
					],
					[
						"T",
						"Tags"
					],
					[
						"Ta",
						"Tags"
					],
					[
						"R",
						"Rest"
					],
					[
						"de",
						"deep_get"
					],
					[
						"fbo",
						"facebook"
					],
					[
						"sa",
						"save_tag"
					],
					[
						"wr",
						"wrong_kind"
					],
					[
						"F",
						"Fields1"
					],
					[
						"A",
						"Available"
					],
					[
						"K",
						"Kinds"
					],
					[
						"I",
						"Interests"
					],
					[
						"get_",
						"get_value"
					],
					[
						"S",
						"Sorted"
					],
					[
						"PC",
						"PrioAcc"
					],
					[
						"W",
						"Words"
					],
					[
						"NB",
						"NewBuffer"
					],
					[
						"DS",
						"Descs"
					],
					[
						"URL",
						"LISTS_URL"
					],
					[
						"c",
						"current"
					],
					[
						"NS",
						"NewState"
					],
					[
						"new",
						"new_state"
					],
					[
						"cu",
						"cursor"
					],
					[
						"user",
						"user_id"
					],
					[
						"b",
						"buffer"
					],
					[
						"St",
						"State"
					],
					[
						"O",
						"Out"
					],
					[
						"Re",
						"Result"
					],
					[
						"C",
						"Count"
					],
					[
						"Wor",
						"Word"
					],
					[
						"E1",
						"Elem1"
					],
					[
						"lo",
						"lower"
					],
					[
						"Da",
						"Data"
					],
					[
						"get",
						"get_value"
					],
					[
						"D",
						"Data"
					],
					[
						"ha",
						"handle_profiles_batch"
					],
					[
						"us",
						"utc_sec"
					],
					[
						"ch",
						"current_hour"
					],
					[
						"To",
						"Total"
					],
					[
						"bas",
						"bash_test"
					],
					[
						"tokey",
						"token_app_usage_key"
					],
					[
						"Cla",
						"Class"
					],
					[
						"Tim",
						"Time"
					],
					[
						"Ti",
						"Time"
					],
					[
						"mod",
						"module_to_provider"
					],
					[
						"T2",
						"Token2"
					],
					[
						"od",
						"OauthData"
					],
					[
						"De",
						"Deadline"
					],
					[
						"deadlin",
						"deadline"
					],
					[
						"fa",
						"false"
					],
					[
						"ck",
						"check_token"
					],
					[
						"T1",
						"Token1"
					],
					[
						"chec",
						"check_token"
					],
					[
						"d",
						"dummy"
					],
					[
						"tr",
						"true"
					],
					[
						"sti",
						"save_token_info"
					],
					[
						"pu",
						"put_object"
					],
					[
						"undef",
						"undefined"
					],
					[
						"pr",
						"provider"
					],
					[
						"toi",
						"get_token_info"
					],
					[
						"Pra",
						"Params"
					],
					[
						"U",
						"Usage"
					],
					[
						"ut",
						"utc_sec"
					],
					[
						"token_",
						"token_info"
					],
					[
						"IN",
						"Insert"
					],
					[
						"by",
						"bytea"
					],
					[
						"ke",
						"get_by_key"
					],
					[
						"http",
						"http_get"
					],
					[
						"sr",
						"SEARCH_PRIVATE"
					],
					[
						"reds",
						"redis_returns"
					],
					[
						"Cmds",
						"Commands"
					],
					[
						"redis_cmd",
						"redis_cmd_failsafe"
					],
					[
						"rec",
						"redis_cmd"
					],
					[
						"redis_rer",
						"redis_return"
					],
					[
						"err",
						"error"
					],
					[
						"Res",
						"Results"
					],
					[
						"rcs",
						"redis_cmds"
					],
					[
						"res",
						"redis_returns"
					],
					[
						"ret",
						"redis_returns"
					],
					[
						"rd",
						"redis_cmd"
					],
					[
						"red",
						"redis_cmd"
					],
					[
						"E",
						"Elem"
					],
					[
						"US",
						"UString"
					],
					[
						"ne",
						"next_letter"
					],
					[
						"B",
						"Bin2"
					],
					[
						"rc",
						"redis_cmd"
					],
					[
						"do",
						"downcase"
					],
					[
						"DB",
						"DropBefore"
					],
					[
						"so",
						"some_ip"
					],
					[
						"in",
						"integer"
					],
					[
						"th",
						"token_healthy"
					],
					[
						"RS",
						"ReqState"
					],
					[
						"krake",
						"kraken"
					],
					[
						"q",
						"queue_after"
					],
					[
						"Req",
						"Request"
					],
					[
						"deV",
						"debugVal"
					],
					[
						"ass",
						"assert"
					],
					[
						"co",
						"content_type"
					],
					[
						"M",
						"MESSAGE_BASE"
					],
					[
						"or",
						"oauth_request"
					],
					[
						"oa",
						"oauth_request"
					],
					[
						"kra",
						"kraken_linkedin_provider"
					],
					[
						"Cl",
						"Class"
					],
					[
						"Class",
						"ClassUsage"
					],
					[
						"AP",
						"AppLimit"
					],
					[
						"Time",
						"Timestamp1"
					],
					[
						"RL",
						"RemainingLimit"
					],
					[
						"link",
						"linkedid"
					],
					[
						"se",
						"send_message"
					],
					[
						"pro",
						"provider"
					],
					[
						"per",
						"perform_read"
					]
				]
			},
			"build_system": "Packages/connect.sublime-build",
			"command_palette":
			{
				"height": 95.0,
				"selected_items":
				[
					[
						"tc",
						"Convert Case: Title Case"
					],
					[
						"cu",
						"Convert Case: Upper Case"
					],
					[
						"ct",
						"Convert Case: Title Case"
					],
					[
						"",
						"Convert Case: Title Case"
					]
				],
				"width": 392.0
			},
			"console":
			{
				"height": 129.0
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": true,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/x/w/e/c/cx/medusa/src/medusa_publisher.erl",
				"/x/w/e/c/cx/config/base",
				"/x/w/e/c/cx/kraken/src/opts.erl.source",
				"/x/w/e/c/cx/search/src/opts.erl",
				"/x/w/e/c/cx/search/src/opts.erl.source",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/cxlib/src/cxlib_consumer.erl",
				"/x/w/e/c/cx/chupacabra/src/amqp_api_opts.erl",
				"/x/w/e/c/cx/kraken/src/opts.erl",
				"/x/w/e/c/cx/kraken/src/kraken_publisher.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib_consumer.erl",
				"/x/w/e/c/cx/erlang_contribs/amqp_client/src/amqp_channel.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib_publisher.erl",
				"/x/w/e/c/cx/kraken/src/kraken_sup.erl",
				"/x/w/e/c/cx/medusa/src/medusa_sup.erl",
				"/x/w/e/c/cx/chupacabra/src/chupacabra_api.erl",
				"/x/w/e/c/cx/medusa/src/medusa_badge.erl",
				"/x/w/e/c/cx/medusa/py/m2r2.py",
				"/x/w/e/c/cx/medusa/py/m2r.py",
				"/x/w/e/c/cx/search/src/search_update.erl",
				"/x/w/e/c/cx/medusa/src/medusa_website.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/trust_level.rb",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/api_spec.rb",
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/medusa_internal_api.erl",
				"/x/w/e/c/cx/kraken/src/kraken_dummy_provider.erl",
				"/x/w/e/c/cx/medusa/src/medusa_autotags.erl",
				"/x/w/e/c/cx/search/src/search_sup.erl",
				"/x/w/e/c/cx/search/src/search_internal_api.erl",
				"/home/jlarky/.ssh/config",
				"/x/w/e/c/cx/medusa/src/opts.erl.source",
				"/x/w/e/c/cx/chupacabra/src/chupacabra_publisher.erl",
				"/x/w/e/c/cx/kraken/src/kraken_core.erl",
				"/x/w/e/c/cx/medusa/src/medusa_card.erl",
				"/x/w/e/c/cx/medusa/src/medusa_keys.erl",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/search_spec.rb",
				"/x/w/e/c/cx/scripts/sql/schemas.sql",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/extensions/has_provider_tags.rb",
				"/x/w/e/c/cx/kraken/src/kraken_twitter_provider.erl",
				"/x/w/e/c/cx/kraken/src/kraken_token_pool.erl",
				"/x/w/e/c/cx/kraken/src/kraken_facebook_provider.erl",
				"/x/w/e/c/cx/kraken/src/kraken_linkedin_provider.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/utl.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/badge.rb",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/config.rb",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/helper.rb",
				"/x/w/e/c/cx/kraken/include/twitter.hrl",
				"/x/w/e/c/cx/scripts/sql/cx.sql",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/cxlib/include/cx.hrl",
				"/x/w/e/c/cx/medusa/src/medusa_api.erl",
				"/x/w/e/c/cx/kraken/src/medusa_badge.erl",
				"/x/w/e/c/cx/scripts/psql_setup.sh",
				"/media/data/jlarky/work/erlang-us/cx/scripts/psql_setup.sh",
				"/media/data/jlarky/work/erlang-us/cx/scripts/rabbit_setup.sh",
				"/x/w/e/c/cx/erlang_contribs/cxlib/include/cx.hrl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/pi.erl",
				"/x/w/e/c/cx/tests/kraken.tester/bash_test.sh",
				"/x/w/e/c/cx/kraken/doc/facebook.txt",
				"/home/jlarky/chrome_clodo",
				"/x/w/e/c/cx/medusa/src/medusa_badges.erl",
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/medusa_api.erl",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-29_19-27-34.571087.log",
				"/home/jlarky/.ssh/known_hosts",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-03-01_13-33-45.832145.log",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-03-01_13-29-20.564640.log",
				"/x/w/e/c/cx/kraken/log/twitter/22676414-LNu3aizaSDZgbocCr1wC4kkbLelzWCQ3uXgnKPqYp/2012-02-29_15-26-38.438782.log",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/ewgi_api.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/linked_in/adapter.rb",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-02-29_19-49-56.947850.log",
				"/media/data/jlarky/work/erlang-us/cx/README",
				"/media/data/jlarky/work/erlang-us/cx/kraken/doc/facebook.txt",
				"/media/data/jlarky/work/erlang-us/cx/tests/kraken.tester/bash_test.sh",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-02-29_19-48-31.852841.log",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/erlang-oauth/README.txt",
				"/media/data/jlarky/work/erlang-us/cx/kraken/README",
				"/media/data/jlarky/work/erlang-us/cx/tests/cx.ruby.tests/README",
				"/x/w/e/c/cx/kraken/README",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-29_19-39-11.491962.log",
				"/x/w/e/c/cx/kraken/include/facebook.hrl",
				"/x/w/e/c/cx/kraken/src/medusa_update.erl",
				"/x/w/e/c/cx/medusa/src/medusa_update.erl",
				"/x/w/e/c/cx/kraken/priv/dummy/get_profile_100.txt",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/.make_all.sh",
				"/media/data/jlarky/work/erlang-us/cx/apply_config.sh",
				"/media/data/jlarky/work/erlang-us/cx/update.sh",
				"/x/w/e/c/cx/erlang_contribs/.make_all.sh",
				"/media/data/jlarky/work/erlang-us/cx/config/applied_config",
				"/tmp/t.E",
				"/tmp/t.erl",
				"/tmp/t.P",
				"/tmp/t.S",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/tag.rb",
				"/media/data/jlarky/work/erlang-us/cx/kraken/src/kraken_core.erl",
				"/x/w/e/c/cx/medusa/src/medusa_internal_api.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/facebook/import.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/facebook/adapter.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/twitter/adapter.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/adapter.rb",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/od.erl",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-28_18-30-33.175113.log",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-28_17-43-05.439295.log",
				"/media/data/jlarky/work/erlang-us/cx/tests/cx.ruby.tests/spec/sn_event_spec.rb",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-28_18-08-50.312755.log",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-28_18-04-23.299392.log",
				"/x/w/e/c/cx/config/jlarky",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-28_00-35-12.880010.log",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-28_00-38-13.162122.log",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-28_00-44-30.134885.log",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-27_23-53-27.192652-raw.log",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-28_00-14-06.324977.log",
				"/x/w/e/c/cx/kraken/src/kraken_oauth.erl",
				"/x/w/e/c/cx/kraken/log/linkedin/526796e9-40aa-4d69-b2f9-a10b300ee8e7/2012-02-28_00-11-29.280309.log",
				"/home/jlarky/bins/cx_test_pedal",
				"/x/w/e/c/cx/kraken/src/kraken_queue_manager.erl",
				"/x/w/e/c/cx/kraken/include/token_pool.hrl",
				"/x/w/e/c/cx/medusa/src/seed.erl",
				"/x/w/e/c/cx/kraken/src/medusa_autotags.erl",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/cxlib/src/od.erl",
				"/x/w/e/c/cx/kraken/src/od.erl",
				"/x/w/e/c/cx/kraken/src/kraken_google_provider.erl",
				"/x/w/e/c/cx/erlang_contribs/starling/src/ustring.erl",
				"/x/w/e/c/cx/medusa/src/medusa_profile.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/tags_in_network.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/related_tagging.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/spec/lib/connectme/provider/facebook/adapter_spec.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/spec/lib/connectme/provider/facebook/import_spec.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/spec/lib/connectme/provider/facebook/service_spec.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/spec/support/integration_helper.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/features/wizard/vouches.feature",
				"/x/w/e/c/cx/kraken/doc/google.txt"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"add_user_profile",
					"import_users",
					"search_internal_api",
					"is_list",
					"Event",
					"search_event",
					"search_publish",
					"search_post_request",
					"search",
					"medusa_publisher:publish",
					"SettingsMod",
					"amqp_exchange",
					"amqp",
					"medusa_publisher",
					"ampq",
					"SettingsMod",
					"amqp_api_opts",
					"opts",
					"Module",
					"amqp_exchange",
					"opts",
					",",
					"search",
					"IsTrust",
					"Event",
					"false",
					"true",
					"guitarist",
					"CreatedTs",
					"zadd",
					"/vouch",
					"vouch",
					"vouch_unvouch",
					"unvouch",
					"unverified",
					"TrustName",
					"Name",
					"<<\"card\">>",
					"{card",
					"TrustLevel",
					"Profiles",
					"to_js",
					"?info",
					"psql_insert_ignore_duplicate",
					"SelParams",
					"psql_select_insert",
					"-> \"",
					"medusa_badges",
					"recalc_badges",
					" and",
					">=",
					"Level",
					"trust_badge_id",
					"[Name]",
					"    \"",
					"\"",
					"recalc_badges",
					"%%",
					"level",
					"TrustLevel",
					"count",
					"Vouch",
					"\"Vouch\"",
					"vouch",
					"Vouch",
					"Count",
					"VouchCount",
					"ProfileLimit",
					"VoucherPuid, VoucheePuid, Tag)",
					"vouch(VoucherPuid, VoucheePuid)",
					"timestamp without time zone",
					"vouches",
					"is ex",
					"vouches",
					"Puid",
					"vouches",
					"insert",
					"inser",
					"limit",
					"update_badge",
					"vouch_limit",
					"S",
					"s",
					"S",
					"vouches_limit",
					"level:",
					"permissions",
					"Level",
					"level",
					"vouches_limit",
					"VoucherPuid",
					"get_trust_level",
					"vouch_limit",
					"Id",
					"\"trust level\"",
					"C0",
					"equery",
					"TrustLevel",
					"medusa_badges",
					"tag_names_to_ids",
					"vouch",
					"vauch",
					"vouch",
					"primar",
					"puids",
					"puid",
					"badge_id",
					"Url",
					"UrlBinaryStr",
					"url",
					"website",
					"update_ca",
					"Websites",
					"new",
					"websites",
					"url",
					"to_json",
					"    ?INFO(\"... ~p\\n\", [Profile]),\n",
					"catch",
					"friend",
					"Location",
					"location",
					"deep_get",
					"bert",
					"profile_image_url",
					"lastName",
					"publicProfileUrl",
					"profile_url"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"\\1,\\ \\2",
					"\\\\1,\\ \\\\2",
					"\\1,\\ \\2",
					", ",
					"\\\"",
					"\"",
					"\\\"",
					"\\t",
					"\"",
					"\\\"",
					"\\t",
					"",
					"#p{body",
					"p",
					"\\t",
					"listitem",
					"\\\"",
					"/nitrogen/js/",
					"/nitrogen/js",
					"-",
					"\\t"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 32.0
			},
			"input":
			{
				"height": 29.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"m2",
						"medusa/py/m2r2.py"
					],
					[
						"",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"mu",
						"medusa/src/medusa_update.erl"
					],
					[
						"mia",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"cxh",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"su",
						"search/src/search_update.erl"
					],
					[
						"os",
						"medusa/src/opts.erl.source"
					],
					[
						"si",
						"search/src/search_internal_api.erl"
					],
					[
						"mp",
						"medusa/src/medusa_publisher.erl"
					],
					[
						"kp",
						"kraken/src/kraken_publisher.erl"
					],
					[
						"cb",
						"config/base"
					],
					[
						"mos",
						"medusa/src/opts.erl.source"
					],
					[
						"sesu",
						"search/src/search_sup.erl"
					],
					[
						"cxlib_publisher",
						"erlang_contribs/cxlib/src/cxlib_publisher.erl"
					],
					[
						"ms",
						"medusa/src/medusa_sup.erl"
					],
					[
						"ss",
						"search/src/search_sup.erl"
					],
					[
						"sos",
						"search/src/opts.erl.source"
					],
					[
						"ksos",
						"kraken/src/opts.erl.source"
					],
					[
						"searo",
						"search/src/opts.erl.source"
					],
					[
						"amqp_api_opts",
						"chupacabra/src/amqp_api_opts.erl"
					],
					[
						"cxp",
						"erlang_contribs/cxlib/src/cxlib_publisher.erl"
					],
					[
						"cp",
						"chupacabra/src/chupacabra_publisher.erl"
					],
					[
						"kc",
						"kraken/src/kraken_core.erl"
					],
					[
						"kras",
						"kraken/src/kraken_sup.erl"
					],
					[
						"cxlib_consumer",
						"erlang_contribs/cxlib/src/cxlib_consumer.erl"
					],
					[
						"amqp_channel",
						"erlang_contribs/amqp_client/src/amqp_channel.erl"
					],
					[
						"ks",
						"kraken/src/kraken_sup.erl"
					],
					[
						"sea",
						"search/src/search_internal_api.erl"
					],
					[
						"mk",
						"medusa/src/medusa_keys.erl"
					],
					[
						"ma",
						"medusa/src/medusa_api.erl"
					],
					[
						"mc",
						"medusa/src/medusa_card.erl"
					],
					[
						"cha",
						"chupacabra/src/chupacabra_api.erl"
					],
					[
						"mi",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"cx",
						"scripts/sql/cx.sql"
					],
					[
						"psq",
						"scripts/psql_setup.sh"
					],
					[
						"help",
						"tests/cx.ruby.tests/spec/helper.rb"
					],
					[
						"ktp",
						"kraken/src/kraken_token_pool.erl"
					],
					[
						"sche",
						"scripts/sql/schemas.sql"
					],
					[
						"srb",
						"tests/cx.ruby.tests/spec/search_spec.rb"
					],
					[
						"s",
						"scripts/sql/schemas.sql"
					],
					[
						"as",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"mb",
						"medusa/src/medusa_badge.erl"
					],
					[
						"utl",
						"erlang_contribs/cxlib/src/utl.erl"
					],
					[
						"sch",
						"scripts/sql/schemas.sql"
					],
					[
						"bt",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"facet",
						"kraken/doc/facebook.txt"
					],
					[
						"kf",
						"kraken/src/kraken_facebook_provider.erl"
					],
					[
						"mew",
						"medusa/src/medusa_website.erl"
					],
					[
						"apis",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"kt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"kl",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"cx.",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"krafa",
						"kraken/src/kraken_facebook_provider.erl"
					],
					[
						"ap",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"med",
						"medusa/src/medusa_api.erl"
					],
					[
						"api",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"medusa_internal_api",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"twihr",
						"kraken/include/twitter.hrl"
					],
					[
						"medusa_keys",
						"medusa/src/medusa_keys.erl"
					],
					[
						"maal",
						"erlang_contribs/.make_all.sh"
					],
					[
						"meca",
						"medusa/src/medusa_card.erl"
					],
					[
						"kd",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"od",
						"erlang_contribs/cxlib/src/od.erl"
					],
					[
						"krac",
						"kraken/src/kraken_core.erl"
					],
					[
						"ssr",
						"tests/cx.ruby.tests/spec/search_spec.rb"
					],
					[
						"me",
						"medusa/src/medusa_update.erl"
					],
					[
						"kradu",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"krali",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"cj",
						"config/jlarky"
					],
					[
						"kratw",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"sear",
						"search/src/search_internal_api.erl"
					],
					[
						"medup",
						"medusa/src/medusa_update.erl"
					],
					[
						"kroa",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"kraco",
						"kraken/src/kraken_core.erl"
					],
					[
						"ko",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"meu",
						"medusa/src/medusa_update.erl"
					],
					[
						"bate",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"test",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"seed",
						"medusa/src/seed.erl"
					],
					[
						"medke",
						"medusa/src/medusa_keys.erl"
					],
					[
						"krao",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"oder",
						"kraken/src/od.erl"
					],
					[
						"ode",
						"kraken/src/od.erl"
					],
					[
						"od.e",
						"kraken/src/od.erl"
					],
					[
						"testba",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"cxhr",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"krace",
						"kraken/src/kraken_core.erl"
					],
					[
						"ust",
						"erlang_contribs/starling/src/ustring.erl"
					],
					[
						"tp",
						"kraken/src/kraken_token_pool.erl"
					],
					[
						"bashte",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"top",
						"kraken/include/token_pool.hrl"
					],
					[
						"kqm",
						"kraken/src/kraken_queue_manager.erl"
					],
					[
						"qme",
						"kraken/src/kraken_queue_manager.erl"
					],
					[
						"quma",
						"kraken/include/queue_manager.hrl"
					],
					[
						"kfa",
						"kraken/.eunit/kraken_facebook_provider.erl"
					],
					[
						"klp",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"kral",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"twitt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"krt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"conn",
						"erlang_contribs/connection_pool/src/connection_pool.erl"
					],
					[
						"psqbi",
						"erlang_contribs/epgsql/src/pgsql_binary.erl"
					],
					[
						"psqco",
						"erlang_contribs/epgsql/src/pgsql_connection.erl"
					],
					[
						"psqle",
						"erlang_contribs/epgsql/src/pgsql.erl"
					],
					[
						"mei",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"pi",
						"erlang_contribs/cxlib/src/pi.erl"
					],
					[
						"upda",
						"update.sh"
					],
					[
						"lin",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"searb",
						"search/test/spec/basic.rb"
					],
					[
						"redo_redis_proto",
						"erlang_contribs/redo/src/redo_redis_proto.erl"
					],
					[
						"redo",
						"erlang_contribs/redo/src/redo.erl"
					],
					[
						"cop",
						"erlang_contribs/connection_pool/src/connection_pool.erl"
					],
					[
						"cxpie",
						"erlang_contribs/cxlib/src/pi.erl"
					],
					[
						"cxpi",
						"erlang_contribs/cxlib/include/pi.hrl"
					],
					[
						"pi.e",
						"chupacabra/src/pi.erl"
					],
					[
						"krad",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"chu",
						"chupacabra/src/chupacabra_api.erl"
					],
					[
						"dumm",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"read",
						"README"
					],
					[
						"deve",
						"doc/development.rdoc"
					],
					[
						"searc",
						"search/src/search_internal_api.erl"
					],
					[
						"cxped",
						"/home/jlarky/bins/cx_test_pedal"
					],
					[
						"mea",
						"medusa/src/medusa_api.erl"
					],
					[
						"map",
						"medusa/src/medusa_api.erl"
					],
					[
						"pio",
						"medusa/src/pi_out.erl"
					],
					[
						"medu",
						"medusa/src/medusa_api.erl"
					],
					[
						"doc",
						"doc/servers.rdoc"
					],
					[
						"rdo",
						"doc/servers.rdoc"
					],
					[
						"rdoc",
						"doc/development.rdoc"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"selected_items":
				[
					[
						"",
						"/home/jlarky/.sublime/kakaweb.sublime-project"
					]
				],
				"width": 380.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 206.0,
			"status_bar_visible": true
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"Pr",
						"ProfileUid"
					],
					[
						"pro",
						"profile_uid"
					],
					[
						"in",
						"include"
					],
					[
						"E",
						"Events"
					],
					[
						"UPa",
						"UpdateParams"
					],
					[
						"pe",
						"process_event"
					],
					[
						"S",
						"SnEvent"
					],
					[
						"T",
						"Tags2"
					],
					[
						"to",
						"to_integer"
					],
					[
						"P",
						"Popularity"
					],
					[
						"C",
						"Cmds"
					],
					[
						"Ta",
						"TagId"
					],
					[
						"no",
						"nothing"
					],
					[
						"t",
						"to_json"
					],
					[
						"bi",
						"binary"
					],
					[
						"dc",
						"data_to_card"
					],
					[
						"pr",
						"profile_url"
					],
					[
						"pu",
						"puid"
					],
					[
						"req",
						"require"
					],
					[
						"de",
						"default"
					],
					[
						"for",
						"force_profile_update"
					],
					[
						"tr",
						"try_add_profile"
					],
					[
						"U",
						"User"
					],
					[
						"ex",
						"export"
					],
					[
						"L",
						"Level"
					],
					[
						"Q",
						"Query"
					],
					[
						"Pd",
						"Puid"
					],
					[
						"VP",
						"VoucheePuid"
					],
					[
						"V",
						"VoucherPuid"
					],
					[
						"badge",
						"badge_groups"
					],
					[
						"ba",
						"badge_groups"
					],
					[
						"Url",
						"Urls"
					],
					[
						"we",
						"websites"
					],
					[
						"en",
						"encode"
					],
					[
						"add_",
						"add_user_profiles"
					],
					[
						"Pro",
						"Profile"
					],
					[
						"add",
						"add_profiles"
					],
					[
						"fo",
						"force"
					],
					[
						"R",
						"Rest"
					],
					[
						"fbo",
						"facebook"
					],
					[
						"sa",
						"save_tag"
					],
					[
						"wr",
						"wrong_kind"
					],
					[
						"F",
						"Fields1"
					],
					[
						"A",
						"Available"
					],
					[
						"K",
						"Kinds"
					],
					[
						"I",
						"Interests"
					],
					[
						"get_",
						"get_value"
					],
					[
						"PC",
						"PrioAcc"
					],
					[
						"W",
						"Words"
					],
					[
						"NB",
						"NewBuffer"
					],
					[
						"DS",
						"Descs"
					],
					[
						"URL",
						"LISTS_URL"
					],
					[
						"c",
						"current"
					],
					[
						"NS",
						"NewState"
					],
					[
						"new",
						"new_state"
					],
					[
						"cu",
						"cursor"
					],
					[
						"user",
						"user_id"
					],
					[
						"b",
						"buffer"
					],
					[
						"St",
						"State"
					],
					[
						"O",
						"Out"
					],
					[
						"Re",
						"Result"
					],
					[
						"Wor",
						"Word"
					],
					[
						"E1",
						"Elem1"
					],
					[
						"lo",
						"lower"
					],
					[
						"Da",
						"Data"
					],
					[
						"get",
						"get_value"
					],
					[
						"D",
						"Data"
					],
					[
						"ha",
						"handle_profiles_batch"
					],
					[
						"us",
						"utc_sec"
					],
					[
						"ch",
						"current_hour"
					],
					[
						"To",
						"Total"
					],
					[
						"bas",
						"bash_test"
					],
					[
						"tokey",
						"token_app_usage_key"
					],
					[
						"Cla",
						"Class"
					],
					[
						"Tim",
						"Time"
					],
					[
						"Ti",
						"Time"
					],
					[
						"mod",
						"module_to_provider"
					],
					[
						"T2",
						"Token2"
					],
					[
						"od",
						"OauthData"
					],
					[
						"De",
						"Deadline"
					],
					[
						"deadlin",
						"deadline"
					],
					[
						"fa",
						"false"
					],
					[
						"ck",
						"check_token"
					],
					[
						"T1",
						"Token1"
					],
					[
						"chec",
						"check_token"
					],
					[
						"d",
						"dummy"
					],
					[
						"sti",
						"save_token_info"
					],
					[
						"undef",
						"undefined"
					],
					[
						"toi",
						"get_token_info"
					],
					[
						"Pra",
						"Params"
					],
					[
						"ut",
						"utc_sec"
					],
					[
						"token_",
						"token_info"
					],
					[
						"IN",
						"Insert"
					],
					[
						"by",
						"bytea"
					],
					[
						"ke",
						"get_by_key"
					],
					[
						"http",
						"http_get"
					],
					[
						"sr",
						"SEARCH_PRIVATE"
					],
					[
						"reds",
						"redis_returns"
					],
					[
						"Cmds",
						"Commands"
					],
					[
						"redis_cmd",
						"redis_cmd_failsafe"
					],
					[
						"rec",
						"redis_cmd"
					],
					[
						"redis_rer",
						"redis_return"
					],
					[
						"err",
						"error"
					],
					[
						"Res",
						"Results"
					],
					[
						"rcs",
						"redis_cmds"
					],
					[
						"res",
						"redis_returns"
					],
					[
						"ret",
						"redis_returns"
					],
					[
						"rd",
						"redis_cmd"
					],
					[
						"red",
						"redis_cmd"
					],
					[
						"US",
						"UString"
					],
					[
						"ne",
						"next_letter"
					],
					[
						"B",
						"Bin2"
					],
					[
						"rc",
						"redis_cmd"
					],
					[
						"do",
						"downcase"
					],
					[
						"DB",
						"DropBefore"
					],
					[
						"so",
						"some_ip"
					],
					[
						"th",
						"token_healthy"
					],
					[
						"RS",
						"ReqState"
					],
					[
						"krake",
						"kraken"
					],
					[
						"q",
						"queue_after"
					],
					[
						"Req",
						"Request"
					],
					[
						"deV",
						"debugVal"
					],
					[
						"ass",
						"assert"
					],
					[
						"co",
						"content_type"
					],
					[
						"M",
						"MESSAGE_BASE"
					],
					[
						"or",
						"oauth_request"
					],
					[
						"oa",
						"oauth_request"
					],
					[
						"kra",
						"kraken_linkedin_provider"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "https://www.googleapis.com/auth/plus.me\nhttps://www.googleapis.com/auth/plus.people.recommended\nhttps://www.googleapis.com/auth/userinfo.email\n\nhttps://www.facebook.com/dialog/permissions.request?app_id=221404817883872&display=page&next=https%3A%2F%2Fme.singly.com%2Fauth%2Ffacebook%2Fauth&response_type=code&perms=email%2Coffline_access%2Cread_stream%2Cuser_photos%2Cfriends_photos%2Cuser_photo_video_tags&fbconnect=1\n\nhttps://accounts.google.com/o/oauth2/auth?scope=https://www.google.com/m8/feeds/&response_type=code&access_type=offline&approval_prompt=force&client_id=930589277339.apps.googleusercontent.com&redirect_uri=https://me.singly.com/auth/gcontacts/auth\n\n[{<<\"id\">>,\n          {[{<<\"$t\">>,\n             <<\"http://www.google.com/m8/feeds/contacts/jlarky%40gmail.com/base/66820a258f19496c\">>}]}},\n         {<<\"updated\">>,{[{<<\"$t\">>,<<\"2011-07-14T08:06:14.600Z\">>}]}},\n         {<<\"category\">>,\n          [{[{<<\"scheme\">>,<<\"http://schemas.google.com/g/2005#kind\">>},\n             {<<\"term\">>,\n              <<\"http://schemas.google.com/contact/2008#contact\">>}]}]},\n         {<<\"title\">>,\n          {[{<<\"type\">>,<<\"text\">>},\n            {<<\"$t\">>,\n             <<208,144,208,187,208,181,208,186,209,129,208,176,208,189,208,\n               180,209,128,32,208,145,208,190,208,179,208,176,209,130,209,\n               139,209,128,209,145,208,178>>}]}},\n         {<<\"link\">>,\n          [{[{<<\"rel\">>,\n              <<\"http://schemas.google.com/contacts/2008/rel#edit-photo\">>},\n             {<<\"type\">>,<<\"image/*\">>},\n             {<<\"href\">>,\n              <<\"https://www.google.com/m8/feeds/photos/media/jlarky%40gmail.com/66820a258f19496c/1B2M2Y8AsgTpgAmY7PhCfg\">>}]},\n           {[{<<\"rel\">>,<<\"self\">>},\n             {<<\"type\">>,<<\"application/atom+xml\">>},\n             {<<\"href\">>,\n              <<\"https://www.google.com/m8/feeds/contacts/jlarky%40gmail.com/full/66820a258f19496c\">>}]},\n           {[{<<\"rel\">>,<<\"edit\">>},\n             {<<\"type\">>,<<\"application/atom+xml\">>},\n             {<<\"href\">>,\n              <<\"https://www.google.com/m8/feeds/contacts/jlarky%40gmail.com/full/66820a258f19496c/1310630774600001\">>}]}]},\n         {<<\"gd$email\">>,\n          [{[{<<\"rel\">>,<<\"http://schemas.google.com/g/2005#other\">>},\n             {<<\"address\">>,<<\"bogat.alexander@gmail.com\">>},\n             {<<\"primary\">>,<<\"true\">>}]}]}]",
					"settings":
					{
						"buffer_size": 2349,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/jlarky/bins/cx_test_pedal",
					"settings":
					{
						"buffer_size": 3653,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/medusa/src/medusa_update.erl",
					"settings":
					{
						"buffer_size": 7881,
						"line_ending": "Unix"
					}
				},
				{
					"file": "cx/kraken/src/kraken_card.erl",
					"settings":
					{
						"buffer_size": 3122,
						"line_ending": "Unix"
					}
				},
				{
					"file": "cx/kraken/src/kraken_dummy_provider.erl",
					"settings":
					{
						"buffer_size": 3748,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_core.erl",
					"settings":
					{
						"buffer_size": 7835,
						"line_ending": "Unix"
					}
				},
				{
					"file": "cx/medusa/src/medusa_internal_api.erl",
					"settings":
					{
						"buffer_size": 19583,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/tests/kraken.tester/bash_test.sh",
					"settings":
					{
						"buffer_size": 4281,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/medusa/src/medusa_autotags.erl",
					"settings":
					{
						"buffer_size": 6047,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_token_pool.erl",
					"settings":
					{
						"buffer_size": 27592,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_linkedin_provider.erl",
					"settings":
					{
						"buffer_size": 19831,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_facebook_provider.erl",
					"settings":
					{
						"buffer_size": 17133,
						"line_ending": "Unix"
					}
				},
				{
					"file": "cx/erlang_contribs/cxlib/include/cx.hrl",
					"settings":
					{
						"buffer_size": 1809,
						"line_ending": "Unix"
					}
				},
				{
					"file": "cx/scripts/sql/cx.sql",
					"settings":
					{
						"buffer_size": 22521,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/scripts/sql/schemas.sql",
					"settings":
					{
						"buffer_size": 3941,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib.erl",
					"settings":
					{
						"buffer_size": 3221,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/erlang_contribs/cxlib/src/utl.erl",
					"settings":
					{
						"buffer_size": 980,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/api_spec.rb",
					"settings":
					{
						"buffer_size": 32676,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/medusa/src/medusa_api.erl",
					"settings":
					{
						"buffer_size": 33095,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/tests/cx.ruby.tests/lib/sn_event.rb",
					"settings":
					{
						"buffer_size": 2261,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/erlang_contribs/cxlib/include/cx.hrl",
					"settings":
					{
						"buffer_size": 1809,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/medusa/src/search_api.erl",
					"settings":
					{
						"buffer_size": 10354,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/internal_api_spec.rb",
					"settings":
					{
						"buffer_size": 8470,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/internal_api_spec2.rb",
					"settings":
					{
						"buffer_size": 8342,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_publisher.erl",
					"settings":
					{
						"buffer_size": 217,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/opts.erl",
					"settings":
					{
						"buffer_size": 1652,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_sup.erl",
					"settings":
					{
						"buffer_size": 1651,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/medusa/src/amqp_kraken_opts.erl",
					"settings":
					{
						"buffer_size": 422,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/src/kraken_oauth.erl",
					"settings":
					{
						"buffer_size": 16327,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/x/w/e/c/cx/kraken/include/token_pool.hrl",
					"settings":
					{
						"buffer_size": 902,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "Packages/connect.sublime-build",
			"command_palette":
			{
				"height": 92.0,
				"selected_items":
				[
					[
						"tc",
						"Convert Case: Title Case"
					],
					[
						"cu",
						"Convert Case: Upper Case"
					],
					[
						"ct",
						"Convert Case: Title Case"
					],
					[
						"",
						"Convert Case: Title Case"
					]
				],
				"width": 392.0
			},
			"console":
			{
				"height": 129.0
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": true,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/medusa_api.erl",
				"/x/w/e/c/cx/kraken/src/kraken_twitter_provider.erl",
				"/x/w/e/c/cx/medusa/src/medusa_sup.erl",
				"/x/w/e/c/cx/medusa/src/opts.erl",
				"/x/w/e/c/cx/medusa/src/opts.erl.source",
				"/x/w/e/c/cx/kraken/src/opts.erl.source",
				"/x/w/e/c/cx/medusa/src/medusa_internal_api.erl",
				"/x/w/e/c/cx/medusa/src/medusa_card.erl",
				"/x/w/e/c/cx/kraken/src/medusa_internal_api.erl",
				"/x/w/e/c/cx/kraken/src/kraken_google_provider.erl",
				"/x/w/e/c/cx/kraken/src/kraken_sup.erl",
				"/x/w/e/c/cx/kraken/src/kraken_publisher.erl",
				"/x/w/e/c/cx/kraken/doc/google.txt",
				"/media/data/jlarky/work/erlang-us/cx/kraken/include/token_pool.hrl",
				"/x/w/e/c/cx/config/base",
				"/media/data/jlarky/work/erlang-us/cx/kraken/src/kraken_core.erl",
				"/x/w/e/c/cx/search/src/search_update.erl",
				"/x/w/e/c/cx/search/src/search_api.erl",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/internal_api_spec.rb",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/config.rb.source",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/helper.rb",
				"/x/w/e/c/cx/kraken/src/kraken_card.erl",
				"/x/w/e/c/cx/config/jlarky",
				"/x/w/e/c/cx/kraken/src/kraken_facebook_provider.erl",
				"/x/w/e/c/cx/kraken/src/kraken_linkedin_provider.erl",
				"/x/w/e/c/cx/medusa/py/m2r2.py",
				"/media/data/jlarky/work/erlang-us/cx/search/src/ybed.erl",
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/opts.erl.source",
				"/x/w/e/c/cx/medusa/src/medusa_api.erl",
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/medusa_update.erl",
				"/media/data/jlarky/work/erlang-us/cx/kraken/src/kraken_card.erl",
				"/x/w/e/c/cx/kraken/src/kraken_card.src",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/phofs.erl",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/new_user_spec.rb",
				"/x/w/e/c/cx/erlang_contribs/cxlib/include/cx.hrl",
				"/x/w/e/c/cx/erlang_contribs/epgsql/src/pgsql_fdatetime.erl",
				"/x/w/e/c/cx/erlang_contribs/epgsql/src/pgsql_idatetime.erl",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/epgsql/src/pgsql_connection.erl",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/epgsql/src/pgsql_binary.erl",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/api_spec.rb",
				"/media/data/jlarky/work/erlang-us/cx/tests/cx.ruby.tests/spec/internal_api_spec.rb",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/config.rb",
				"/x/w/e/c/cx/kappa/connect.me/Gemfile",
				"/x/w/e/c/cx/tests/cx.ruby.tests/Gemfile",
				"/x/w/e/c/cx/tests/cx.ruby.tests/Gemfile.lock",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib.erl",
				"/x/w/e/c/cx/kappa/connect.me/spec/spec_helper.rb",
				"/x/w/e/c/cx/medusa/py/m2r.py",
				"/x/w/e/c/cx/scripts/sql/schemas.sql",
				"/x/w/e/c/cx/chupacabra/src/chupacabra_api.erl",
				"/home/jlarky/bins/connect_build",
				"/home/jlarky/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
				"/home/jlarky/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
				"/x/w/e/c/cx/kraken/src/medusa_update.erl",
				"/media/data/jlarky/work/erlang-us/cx/chupacabra/src/chupacabra_api.erl",
				"/x/w/e/c/cx/tests/cx.ruby.tests/spec/search_spec.rb",
				"/x/w/e/c/cx/kappa/connect.me/config/env.rb.source",
				"/x/w/e/c/cx/search/src/opts.erl.source",
				"/media/data/jlarky/work/erlang-us/cx/search/src/search_update.erl",
				"/media/data/jlarky/work/erlang-us/cx/search/src/http_page_router.erl",
				"/home/jlarky/timesheet/start.sh",
				"/x/w/e/c/cx/medusa/src/medusa_publisher.erl",
				"/x/w/e/c/cx/search/src/opts.erl",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/cxlib/src/cxlib_consumer.erl",
				"/x/w/e/c/cx/chupacabra/src/amqp_api_opts.erl",
				"/x/w/e/c/cx/kraken/src/opts.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib_consumer.erl",
				"/x/w/e/c/cx/erlang_contribs/amqp_client/src/amqp_channel.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib_publisher.erl",
				"/x/w/e/c/cx/medusa/src/medusa_badge.erl",
				"/x/w/e/c/cx/medusa/src/medusa_website.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/trust_level.rb",
				"/media/data/jlarky/work/erlang-us/cx/medusa/src/medusa_internal_api.erl",
				"/x/w/e/c/cx/kraken/src/kraken_dummy_provider.erl",
				"/x/w/e/c/cx/medusa/src/medusa_autotags.erl",
				"/x/w/e/c/cx/search/src/search_sup.erl",
				"/x/w/e/c/cx/search/src/search_internal_api.erl",
				"/home/jlarky/.ssh/config",
				"/x/w/e/c/cx/chupacabra/src/chupacabra_publisher.erl",
				"/x/w/e/c/cx/kraken/src/kraken_core.erl",
				"/x/w/e/c/cx/medusa/src/medusa_keys.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/extensions/has_provider_tags.rb",
				"/x/w/e/c/cx/kraken/src/kraken_token_pool.erl",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/utl.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/badge.rb",
				"/x/w/e/c/cx/kraken/include/twitter.hrl",
				"/x/w/e/c/cx/scripts/sql/cx.sql",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/cxlib/include/cx.hrl",
				"/x/w/e/c/cx/kraken/src/medusa_badge.erl",
				"/x/w/e/c/cx/scripts/psql_setup.sh",
				"/media/data/jlarky/work/erlang-us/cx/scripts/psql_setup.sh",
				"/media/data/jlarky/work/erlang-us/cx/scripts/rabbit_setup.sh",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/pi.erl",
				"/x/w/e/c/cx/tests/kraken.tester/bash_test.sh",
				"/x/w/e/c/cx/kraken/doc/facebook.txt",
				"/home/jlarky/chrome_clodo",
				"/x/w/e/c/cx/medusa/src/medusa_badges.erl",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-29_19-27-34.571087.log",
				"/home/jlarky/.ssh/known_hosts",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-03-01_13-33-45.832145.log",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-03-01_13-29-20.564640.log",
				"/x/w/e/c/cx/kraken/log/twitter/22676414-LNu3aizaSDZgbocCr1wC4kkbLelzWCQ3uXgnKPqYp/2012-02-29_15-26-38.438782.log",
				"/x/w/e/c/cx/erlang_contribs/cxlib/src/ewgi_api.erl",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/linked_in/adapter.rb",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-02-29_19-49-56.947850.log",
				"/media/data/jlarky/work/erlang-us/cx/README",
				"/media/data/jlarky/work/erlang-us/cx/kraken/doc/facebook.txt",
				"/media/data/jlarky/work/erlang-us/cx/tests/kraken.tester/bash_test.sh",
				"/x/w/e/c/cx/kraken/log/facebook/AAAD0W7HcQ0IBAHpBbiMrl9MxlgLtPAdVZB5GE13ZBtffeotkA0cJfohYwweLHXN8073H9WdPQGAZCbnePXtc17S7Q7iGWLI17QZBwAy75wZDZD/2012-02-29_19-48-31.852841.log",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/erlang-oauth/README.txt",
				"/media/data/jlarky/work/erlang-us/cx/kraken/README",
				"/media/data/jlarky/work/erlang-us/cx/tests/cx.ruby.tests/README",
				"/x/w/e/c/cx/kraken/README",
				"/x/w/e/c/cx/kraken/log/facebook/AAAFCJNOxfhEBAJptZACFCwDxqOZA5SbDG4P1pZCDAE2S8grhHfojpyd3pR1ZBCDZAflkO9aGzWt6luZBQOnyZAVFPno0UJbwVBNVzVJZCcDNQgZDZD/2012-02-29_19-39-11.491962.log",
				"/x/w/e/c/cx/kraken/include/facebook.hrl",
				"/x/w/e/c/cx/medusa/src/medusa_update.erl",
				"/x/w/e/c/cx/kraken/priv/dummy/get_profile_100.txt",
				"/media/data/jlarky/work/erlang-us/cx/erlang_contribs/.make_all.sh",
				"/media/data/jlarky/work/erlang-us/cx/apply_config.sh",
				"/media/data/jlarky/work/erlang-us/cx/update.sh",
				"/x/w/e/c/cx/erlang_contribs/.make_all.sh",
				"/media/data/jlarky/work/erlang-us/cx/config/applied_config",
				"/tmp/t.E",
				"/tmp/t.erl",
				"/tmp/t.P",
				"/tmp/t.S",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/app/models/tag.rb",
				"/media/data/jlarky/work/erlang-us/ruby-connect.me/vendor/connectme/provider/lib/connectme/provider/facebook/import.rb"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"\"dummy\"=>",
					"\"dummy\"=>{\"profile_uid\"=>\"1\", \"profile_url\"=>",
					"cxlib:tag_to_json",
					"cxlib:tag_ids_to_names",
					"id",
					"?info",
					"info",
					"profile_uid",
					"Token, Provider, ",
					"token_sql_to_record",
					"return_token",
					"token, provider",
					"provider",
					"overloaded",
					"provider",
					"save_token_info",
					"unpack_oauth_data",
					"oauth_data",
					"unpack_oauth_data",
					"unpack_auth_data",
					"unpack_oauth_data",
					"provide",
					"X",
					"token_sql_to_record",
					"info",
					"token_sql_to_record",
					"Rows",
					"Row",
					"Rows",
					"Token",
					"profile_uid",
					"save_token_info",
					"SnResult",
					"kraken_publisher",
					"sn_publisher",
					"PublisherOpts",
					"medusa_publisher",
					"opts",
					"amqp_kraken_opts",
					"cxlib:tag_cloud",
					"tag_clo",
					"cxlib:tag_options",
					"tag_options",
					":tag_names_to_ids",
					"tag_names_to_ids",
					"cxlib:tag_names_to_ids",
					"tag_names_to_ids",
					"cxlib:",
					"cxlib:tag_options",
					"INFO",
					"info",
					"try_add_profile",
					"handle",
					"bert",
					"cards",
					"kraken_dummy_provider",
					"dispatch_read_event",
					"process_event(#sn_read_event{provider = <<\"",
					" = SnEvent",
					"event{",
					"sn_read_event",
					"event{",
					"sn_read_event",
					"medusa_publisher",
					"publish",
					"get_a",
					"linkedin_usage",
					"process_task",
					"INFO",
					"tags_relevance",
					"undefined",
					"zip_popularity",
					"PopularityRest",
					"TagId",
					"find_tags",
					"Tags",
					"Name",
					"tags",
					"{ok,[[{<<\"profile_uid\">>,1}|_]|_]},",
					"id",
					"zero_friends",
					"handle_get_friends_batch",
					"id",
					"linkedi",
					"LINKEDIN_CONSUMER_SECRET",
					"OAUTH_LINKEDIN_APP_SECRET",
					"LINKEDIN_CONSUMER_KEY",
					"LINKEDIN_CONSUMER_SECRET",
					"t9nwucmc9pt2",
					"TWITTER",
					"twitter",
					"consumer_key",
					"Puid",
					"function",
					"medusa_card:from_provider",
					"LastName",
					"formatted",
					"Name",
					"Url",
					"Urls",
					"WebsitesVals",
					"summary",
					"data_to_card",
					"formatted-name",
					"profile_fields",
					"data_to_card",
					"Profile",
					"Friends",
					"Data",
					"profile_fields",
					"FROFILE_IMAGE",
					"data_to_card",
					"profile_fields",
					"info",
					"kraken_twitter_provider",
					"profile_fields",
					"profile",
					"medusa_card:from_provider",
					"(r.include?",
					"include?",
					"(r.include? 1004).should == true",
					"(r.include? 1004",
					"(r.include? 1005).should == true",
					"(r.include? 1002).should == true",
					"(r.include? 1006).should == true",
					"(r.include? 1003).should == true",
					"(r.include? 1001).should == true",
					"include?"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"SEARCH_PUBLIC",
					"SEARCH_PUBLIC_HTTP_PORT",
					"SEARCH_PUBLIC_HTTP_HOST",
					"\\1,\\ \\2",
					"\\\\1,\\ \\\\2",
					"\\1,\\ \\2",
					", ",
					"\\\"",
					"\"",
					"\\\"",
					"\\t",
					"\"",
					"\\\"",
					"\\t",
					"",
					"#p{body",
					"p",
					"\\t",
					"listitem",
					"\\\"",
					"/nitrogen/js/",
					"/nitrogen/js",
					"-",
					"\\t"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 17,
					"sheets":
					[
						{
							"buffer": 0,
							"settings":
							{
								"buffer_size": 2349,
								"regions":
								{
								},
								"selection":
								[
									[
										666,
										666
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/jlarky/bins/cx_test_pedal",
							"settings":
							{
								"buffer_size": 3653,
								"regions":
								{
								},
								"selection":
								[
									[
										749,
										749
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/x/w/e/c/cx/medusa/src/medusa_update.erl",
							"settings":
							{
								"buffer_size": 7881,
								"regions":
								{
									"bookmarks":
									{
										"flags": 144,
										"icon": "bookmark",
										"regions":
										[
										],
										"scope": "bookmarks"
									}
								},
								"selection":
								[
									[
										2923,
										2923
									],
									[
										4663,
										4663
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage",
									"word_wrap": true,
									"wrap_width": 0
								},
								"translation.x": 0.0,
								"translation.y": 1190.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "cx/kraken/src/kraken_card.erl",
							"settings":
							{
								"buffer_size": 3122,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "cx/kraken/src/kraken_dummy_provider.erl",
							"settings":
							{
								"buffer_size": 3748,
								"regions":
								{
								},
								"selection":
								[
									[
										33,
										109
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/x/w/e/c/cx/kraken/src/kraken_core.erl",
							"settings":
							{
								"buffer_size": 7835,
								"regions":
								{
								},
								"selection":
								[
									[
										4259,
										4259
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1680.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "cx/medusa/src/medusa_internal_api.erl",
							"settings":
							{
								"buffer_size": 19583,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/x/w/e/c/cx/tests/kraken.tester/bash_test.sh",
							"settings":
							{
								"buffer_size": 4281,
								"regions":
								{
								},
								"selection":
								[
									[
										2870,
										2870
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1250.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 8,
							"file": "/x/w/e/c/cx/medusa/src/medusa_autotags.erl",
							"settings":
							{
								"buffer_size": 6047,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 9,
							"file": "/x/w/e/c/cx/kraken/src/kraken_token_pool.erl",
							"settings":
							{
								"buffer_size": 27592,
								"regions":
								{
								},
								"selection":
								[
									[
										20259,
										20259
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 10709.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 10,
							"file": "/x/w/e/c/cx/kraken/src/kraken_linkedin_provider.erl",
							"settings":
							{
								"buffer_size": 19831,
								"regions":
								{
								},
								"selection":
								[
									[
										1812,
										1812
									],
									[
										2534,
										2534
									],
									[
										3368,
										3368
									],
									[
										4145,
										4145
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 510.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 11,
							"file": "/x/w/e/c/cx/kraken/src/kraken_facebook_provider.erl",
							"settings":
							{
								"buffer_size": 17133,
								"regions":
								{
								},
								"selection":
								[
									[
										9240,
										9240
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 4460.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 12,
							"file": "cx/erlang_contribs/cxlib/include/cx.hrl",
							"settings":
							{
								"buffer_size": 1809,
								"regions":
								{
								},
								"selection":
								[
									[
										567,
										567
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 13,
							"file": "cx/scripts/sql/cx.sql",
							"settings":
							{
								"buffer_size": 22521,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/SQL/SQL.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 10.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 14,
							"file": "/x/w/e/c/cx/scripts/sql/schemas.sql",
							"settings":
							{
								"buffer_size": 3941,
								"regions":
								{
								},
								"selection":
								[
									[
										3316,
										3688
									]
								],
								"settings":
								{
									"syntax": "Packages/SQL/SQL.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 2160.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 15,
							"file": "/x/w/e/c/cx/erlang_contribs/cxlib/src/cxlib.erl",
							"settings":
							{
								"buffer_size": 3221,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 16,
							"file": "/x/w/e/c/cx/erlang_contribs/cxlib/src/utl.erl",
							"settings":
							{
								"buffer_size": 980,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 14.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 17,
							"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/api_spec.rb",
							"settings":
							{
								"buffer_size": 32676,
								"regions":
								{
								},
								"selection":
								[
									[
										10205,
										10205
									]
								],
								"settings":
								{
									"syntax": "Packages/Ruby/Ruby.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 4610.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 18,
							"file": "/x/w/e/c/cx/medusa/src/medusa_api.erl",
							"settings":
							{
								"buffer_size": 33095,
								"regions":
								{
								},
								"selection":
								[
									[
										12819,
										12819
									],
									[
										13304,
										13304
									],
									[
										13430,
										13430
									],
									[
										22431,
										22431
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 6310.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 19,
							"file": "/x/w/e/c/cx/tests/cx.ruby.tests/lib/sn_event.rb",
							"settings":
							{
								"buffer_size": 2261,
								"regions":
								{
								},
								"selection":
								[
									[
										827,
										875
									]
								],
								"settings":
								{
									"syntax": "Packages/Ruby/Ruby.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 480.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 20,
							"file": "/x/w/e/c/cx/erlang_contribs/cxlib/include/cx.hrl",
							"settings":
							{
								"buffer_size": 1809,
								"regions":
								{
								},
								"selection":
								[
									[
										1346,
										1336
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 594.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 21,
							"file": "/x/w/e/c/cx/medusa/src/search_api.erl",
							"settings":
							{
								"buffer_size": 10354,
								"regions":
								{
								},
								"selection":
								[
									[
										8465,
										8465
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 4287.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 22,
							"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/internal_api_spec.rb",
							"settings":
							{
								"buffer_size": 8470,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Ruby/Ruby.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 23,
							"file": "/x/w/e/c/cx/tests/cx.ruby.tests/spec/internal_api_spec2.rb",
							"settings":
							{
								"buffer_size": 8342,
								"regions":
								{
								},
								"selection":
								[
									[
										783,
										783
									]
								],
								"settings":
								{
									"syntax": "Packages/Ruby/Ruby.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 374.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 24,
							"file": "/x/w/e/c/cx/kraken/src/kraken_publisher.erl",
							"settings":
							{
								"buffer_size": 217,
								"regions":
								{
								},
								"selection":
								[
									[
										195,
										195
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 25,
							"file": "/x/w/e/c/cx/kraken/src/opts.erl",
							"settings":
							{
								"buffer_size": 1652,
								"regions":
								{
								},
								"selection":
								[
									[
										1488,
										1500
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 480.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 26,
							"file": "/x/w/e/c/cx/kraken/src/kraken_sup.erl",
							"settings":
							{
								"buffer_size": 1651,
								"regions":
								{
								},
								"selection":
								[
									[
										1208,
										1208
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 200.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 27,
							"file": "/x/w/e/c/cx/medusa/src/amqp_kraken_opts.erl",
							"settings":
							{
								"buffer_size": 422,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 28,
							"file": "/x/w/e/c/cx/kraken/src/kraken_oauth.erl",
							"settings":
							{
								"buffer_size": 16327,
								"regions":
								{
								},
								"selection":
								[
									[
										1324,
										1324
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 560.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 29,
							"file": "/x/w/e/c/cx/kraken/include/token_pool.hrl",
							"settings":
							{
								"buffer_size": 902,
								"regions":
								{
								},
								"selection":
								[
									[
										689,
										699
									]
								],
								"settings":
								{
									"syntax": "Packages/Erlang/Erlang.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 32.0
			},
			"input":
			{
				"height": 29.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 194.0
			},
			"position": "0,1,0,0,0,0,0,0,0,1280,1024",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"ma",
						"medusa/src/medusa_api.erl"
					],
					[
						"ap",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"sc",
						"scripts/sql/schemas.sql"
					],
					[
						"toke",
						"kraken/include/token_pool.hrl"
					],
					[
						"ktp",
						"kraken/src/kraken_token_pool.erl"
					],
					[
						"kc",
						"kraken/src/kraken_core.erl"
					],
					[
						"kf",
						"kraken/src/kraken_facebook_provider.erl"
					],
					[
						"kl",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"kt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"kfp",
						"kraken/src/kraken_facebook_provider.erl"
					],
					[
						"koa",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"cx",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"sch",
						"scripts/sql/schemas.sql"
					],
					[
						"bt",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"kp",
						"kraken/src/kraken_publisher.erl"
					],
					[
						"kso",
						"kraken/src/opts.erl.source"
					],
					[
						"mso",
						"medusa/src/opts.erl"
					],
					[
						"mos",
						"medusa/src/opts.erl.source"
					],
					[
						"ksopts",
						"kraken/src/opts.erl"
					],
					[
						"amqp_kraken_opts",
						"medusa/src/amqp_kraken_opts.erl"
					],
					[
						"ms",
						"medusa/src/medusa_sup.erl"
					],
					[
						"ia",
						"tests/cx.ruby.tests/spec/internal_api_spec2.rb"
					],
					[
						"i",
						"tests/cx.ruby.tests/spec/internal_api_spec.rb"
					],
					[
						"sa",
						"medusa/src/search_api.erl"
					],
					[
						"mu",
						"medusa/src/medusa_update.erl"
					],
					[
						"mia",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"sne",
						"tests/cx.ruby.tests/lib/sn_event.rb"
					],
					[
						"mc",
						"medusa/src/medusa_card.erl"
					],
					[
						"kraken_token_pool",
						"kraken/src/kraken_token_pool.erl"
					],
					[
						"mca",
						"medusa/src/medusa_card.erl"
					],
					[
						"goog",
						"kraken/doc/google.txt"
					],
					[
						"cb",
						"config/base"
					],
					[
						"utl",
						"erlang_contribs/cxlib/src/utl.erl"
					],
					[
						"cxl",
						"erlang_contribs/cxlib/src/cxlib.erl"
					],
					[
						"kli",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"sinte",
						"tests/cx.ruby.tests/spec/internal_api_spec.rb"
					],
					[
						"krc",
						"kraken/src/kraken_core.erl"
					],
					[
						"cj",
						"config/jlarky"
					],
					[
						"bat",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"krat",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"apis",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"meca",
						"medusa/src/medusa_card.erl"
					],
					[
						"spe",
						"kappa/connect.me/spec/spec_helper.rb"
					],
					[
						"medusa_internal_api",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"m2",
						"medusa/py/m2r2.py"
					],
					[
						"chu",
						"chupacabra/src/chupacabra_api.erl"
					],
					[
						"pgsql_idatetime",
						"erlang_contribs/epgsql/src/pgsql_idatetime.erl"
					],
					[
						"m2r",
						"medusa/py/m2r2.py"
					],
					[
						"mi",
						"medusa/src/medusa_internal_api.erl"
					],
					[
						"ias",
						"tests/cx.ruby.tests/spec/internal_api_spec.rb"
					],
					[
						"phofs",
						"erlang_contribs/cxlib/src/phofs.erl"
					],
					[
						"tss",
						"tests/cx.ruby.tests/spec/search_spec.rb"
					],
					[
						"su",
						"search/src/search_update.erl"
					],
					[
						"cxh",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"os",
						"medusa/src/opts.erl.source"
					],
					[
						"si",
						"search/src/search_internal_api.erl"
					],
					[
						"mp",
						"medusa/src/medusa_publisher.erl"
					],
					[
						"sesu",
						"search/src/search_sup.erl"
					],
					[
						"cxlib_publisher",
						"erlang_contribs/cxlib/src/cxlib_publisher.erl"
					],
					[
						"ss",
						"search/src/search_sup.erl"
					],
					[
						"sos",
						"search/src/opts.erl.source"
					],
					[
						"ksos",
						"kraken/src/opts.erl.source"
					],
					[
						"searo",
						"search/src/opts.erl.source"
					],
					[
						"amqp_api_opts",
						"chupacabra/src/amqp_api_opts.erl"
					],
					[
						"cxp",
						"erlang_contribs/cxlib/src/cxlib_publisher.erl"
					],
					[
						"cp",
						"chupacabra/src/chupacabra_publisher.erl"
					],
					[
						"kras",
						"kraken/src/kraken_sup.erl"
					],
					[
						"cxlib_consumer",
						"erlang_contribs/cxlib/src/cxlib_consumer.erl"
					],
					[
						"amqp_channel",
						"erlang_contribs/amqp_client/src/amqp_channel.erl"
					],
					[
						"ks",
						"kraken/src/kraken_sup.erl"
					],
					[
						"sea",
						"search/src/search_internal_api.erl"
					],
					[
						"mk",
						"medusa/src/medusa_keys.erl"
					],
					[
						"cha",
						"chupacabra/src/chupacabra_api.erl"
					],
					[
						"psq",
						"scripts/psql_setup.sh"
					],
					[
						"help",
						"tests/cx.ruby.tests/spec/helper.rb"
					],
					[
						"sche",
						"scripts/sql/schemas.sql"
					],
					[
						"srb",
						"tests/cx.ruby.tests/spec/search_spec.rb"
					],
					[
						"s",
						"scripts/sql/schemas.sql"
					],
					[
						"as",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"mb",
						"medusa/src/medusa_badge.erl"
					],
					[
						"facet",
						"kraken/doc/facebook.txt"
					],
					[
						"mew",
						"medusa/src/medusa_website.erl"
					],
					[
						"cx.",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"krafa",
						"kraken/src/kraken_facebook_provider.erl"
					],
					[
						"med",
						"medusa/src/medusa_api.erl"
					],
					[
						"api",
						"tests/cx.ruby.tests/spec/api_spec.rb"
					],
					[
						"twihr",
						"kraken/include/twitter.hrl"
					],
					[
						"medusa_keys",
						"medusa/src/medusa_keys.erl"
					],
					[
						"maal",
						"erlang_contribs/.make_all.sh"
					],
					[
						"kd",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"od",
						"erlang_contribs/cxlib/src/od.erl"
					],
					[
						"krac",
						"kraken/src/kraken_core.erl"
					],
					[
						"ssr",
						"tests/cx.ruby.tests/spec/search_spec.rb"
					],
					[
						"me",
						"medusa/src/medusa_update.erl"
					],
					[
						"kradu",
						"kraken/src/kraken_dummy_provider.erl"
					],
					[
						"krali",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"kratw",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"sear",
						"search/src/search_internal_api.erl"
					],
					[
						"medup",
						"medusa/src/medusa_update.erl"
					],
					[
						"kroa",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"kraco",
						"kraken/src/kraken_core.erl"
					],
					[
						"ko",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"meu",
						"medusa/src/medusa_update.erl"
					],
					[
						"bate",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"test",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"seed",
						"medusa/src/seed.erl"
					],
					[
						"medke",
						"medusa/src/medusa_keys.erl"
					],
					[
						"krao",
						"kraken/src/kraken_oauth.erl"
					],
					[
						"oder",
						"kraken/src/od.erl"
					],
					[
						"ode",
						"kraken/src/od.erl"
					],
					[
						"od.e",
						"kraken/src/od.erl"
					],
					[
						"testba",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"cxhr",
						"erlang_contribs/cxlib/include/cx.hrl"
					],
					[
						"krace",
						"kraken/src/kraken_core.erl"
					],
					[
						"ust",
						"erlang_contribs/starling/src/ustring.erl"
					],
					[
						"tp",
						"kraken/src/kraken_token_pool.erl"
					],
					[
						"bashte",
						"tests/kraken.tester/bash_test.sh"
					],
					[
						"top",
						"kraken/include/token_pool.hrl"
					],
					[
						"kqm",
						"kraken/src/kraken_queue_manager.erl"
					],
					[
						"qme",
						"kraken/src/kraken_queue_manager.erl"
					],
					[
						"quma",
						"kraken/include/queue_manager.hrl"
					],
					[
						"kfa",
						"kraken/.eunit/kraken_facebook_provider.erl"
					],
					[
						"klp",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"kral",
						"kraken/src/kraken_linkedin_provider.erl"
					],
					[
						"twitt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"krt",
						"kraken/src/kraken_twitter_provider.erl"
					],
					[
						"conn",
						"erlang_contribs/connection_pool/src/connection_pool.erl"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"selected_items":
				[
					[
						"",
						"/home/jlarky/.sublime/kakaweb.sublime-project"
					]
				],
				"width": 380.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 223.0,
			"status_bar_visible": true,
			"window_id": 21,
			"workspace_name": "/media/data/jlarky/work/erlang-us/cx.sublime-project"
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/media/data/jlarky/work/erlang-us/cx.sublime-project",
			"/home/jlarky/.sublime/kakaweb.sublime-project",
			"/home/jlarky/omni/solar-extremes.sublime-project",
			"/home/jlarky/.sublime/kakaserver.sublime-project",
			"/media/data/jlarky/scientific work/master_work/master_work.sublime-project"
		]
	}
}
